<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  
  
  
  
  <!-- <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>classpath*:/application.xml</param-value>
  </context-param> -->
  <!-- 载入application.xml等文件 -->
	<!-- <listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener> -->
	
	
	<!-- 此监听器出用于主要为了解决java.beans.Introspector导致内存泄漏的问题 -->
  <listener>
    <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>
  
  
  <!-- log4j 配置  开始 -->  
	<context-param>  
	    <param-name>log4jConfigLocation</param-name>  
		<param-value>classpath:log4j.properties</param-value>  
	</context-param>  
	<context-param>  
	    <param-name>log4jRefreshInterval</param-name>  
	    <param-value>600000</param-value>  
	</context-param>  
	<context-param>  
	    <param-name>webAppRootKey</param-name>  
	    <param-value>webapp.root</param-value>  
	</context-param>  
	<listener>  
	    <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>  
	</listener>  
	<!-- log4j 配置  结束 -->  

  <!-- Character Encoding filter -->
    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
    
  
  <!-- spring-redis-session配置 -->
  <filter>
		<filter-name>springSessionRepositoryFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetBeanName</param-name>
			<param-value>springSessionRepositoryFilter</param-value>

		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>springSessionRepositoryFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
  <servlet>
  	<servlet-name>springMVC</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<init-param>
  		<param-name>contextConfigLocation</param-name>
  		<param-value>classpath:spring-*.xml</param-value>
  	</init-param>
  	<load-on-startup>1</load-on-startup>
  	
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>springMVC</servlet-name>
  	<url-pattern>/</url-pattern>
  </servlet-mapping>
  
  
    
  <!-- 对客户端请求的静态资源如图片、JS文件等的请求交由默认的servlet进行处理 -->
  <!-- <servlet-mapping>
  	<servlet-name>default</servlet-name>
  	<url-pattern>*.html</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
  <servlet-name>default</servlet-name>
  	<url-pattern>*.js</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
  <servlet-name>default</servlet-name>
  	<url-pattern>*.css</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
  <servlet-name>default</servlet-name>
  	<url-pattern>*.png</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
  <servlet-name>default</servlet-name>
  	<url-pattern>*.jpg</url-pattern>
  </servlet-mapping> -->
  
  <!-- 添加一个过滤器获取所有请求的请求内容，一定要优先于druid过滤器 -->
   <!-- <filter>
    	<filter-name>allRequestResponse</filter-name>
    	<filter-class>com.dreamaker.filter.AllRequestResponseFilter</filter-class>
    </filter>
    <filter-mapping>
    	<filter-name>allRequestResponse</filter-name>
    	<url-pattern>/*</url-pattern>
    </filter-mapping> -->
  
    
  
  <!-- Druid,监控数据库,以及WEB访问连接信息 -->  
<!-- 参考: https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_%E9%85%8D%E7%BD%AEWebStatFilter -->  
<filter>  
    <filter-name>DruidWebStatFilter</filter-name>  
    <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>  
    <init-param>  
        <param-name>exclusions</param-name>  
        <param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,*.jsp,/druid/*,/download/*</param-value>  
    </init-param>  
    <init-param>  
        <param-name>sessionStatMaxCount</param-name>  
        <param-value>2000</param-value>  
    </init-param>  
    <init-param>  
        <param-name>sessionStatEnable</param-name>  
        <param-value>true</param-value>  
    </init-param>  
    <init-param>  
        <param-name>principalSessionName</param-name>  
        <param-value>session_user_key</param-value>  
    </init-param>  
    <init-param>  
        <param-name>profileEnable</param-name>  
        <param-value>true</param-value>  
    </init-param>  
</filter>  
<filter-mapping>  
    <filter-name>DruidWebStatFilter</filter-name>  
    <url-pattern>/*</url-pattern>  
</filter-mapping>  
<!-- 配置 Druid 监控信息显示页面 -->  
<servlet>  
    <servlet-name>DruidStatView</servlet-name>  
    <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>  
    <init-param>  
        <!-- 允许清空统计数据 -->  
        <param-name>resetEnable</param-name>  
        <param-value>true</param-value>  
    </init-param>  
    <init-param>  
        <!-- 用户名 -->  
        <param-name>loginUsername</param-name>  
        <param-value>druid</param-value>  
    </init-param>  
    <init-param>  
        <!-- 密码 -->  
        <param-name>loginPassword</param-name>  
        <param-value>druid</param-value>  
    </init-param>  
</servlet>  
<servlet-mapping>  
    <servlet-name>DruidStatView</servlet-name>  
    <url-pattern>/druid/*</url-pattern>  
</servlet-mapping> 


    
  
  <display-name>ding-h5</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
</web-app>